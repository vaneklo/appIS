{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DobleClick\\\\Documents\\\\GitHub\\\\appIS\\\\historiaRegistroRecetas\\\\src\\\\formularioRecetas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase from 'firebase';\nimport TableroDeIngredientes from './TableroDeIngredientes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormularioRecetas = props => {\n  _s();\n\n  //valores iniciales de los campos nombre desripcion y complejidad\n  const initialStateValues = {\n    camponombre: '',\n    campodescripcion: '',\n    campocomplejidad: ''\n  }; //valores iniciales de la imagen es null                     \n\n  const [image, setImage] = useState(null); //valores iniciales de los campos de texto\n\n  const [values, setValues] = useState(initialStateValues);\n\n  const agregarReceta = async () => {\n    //comunicacion con la base de datos\n    //con la coleccion receta.doc para id unico\n    //link object los valores\n    await db.collection('receta').doc().set(values);\n    window(\"nuevo agregado\");\n  }; //validacion de los campos de texto\n\n\n  const validarNombreReceta = str => {\n    var pattern = new RegExp(\"^.*[a-zA-Z]+.*$\");\n    return !!pattern.test(str);\n  };\n\n  const validarDescripcionReceta = str => {\n    var pattern = new RegExp(\"^.*[a-zA-Z]+.*$\");\n    return !!pattern.test(str);\n  };\n\n  const validarComplejidadReceta = str => {\n    var pattern = new RegExp(\"^[1-9][0-9]*$\");\n    return !!pattern.test(str);\n  }; //controlo los cambios evitando que la pagina se recarge e informo de los valores de los campos de texto\n\n\n  const handleSubmit = e => {\n    if (!validarNombreReceta(values.camponombre)) {\n      alert(\"nombre no valido\");\n    } else {\n      if (!validarDescripcionReceta(values.campodescripcion)) {\n        alert(\"descripcion no valida\");\n      } else {\n        if (!validarComplejidadReceta(values.campocomplejidad)) {\n          alert(\"la complejidad solo se mide con numeros\");\n        } else {\n          if (image === null) {\n            alert(\"debe agregar una imagen\");\n          } else {\n            e.preventDefault();\n            console.log(values);\n            agregarReceta(values);\n            actualizacionImagen();\n          }\n        }\n      }\n    }\n  }; //veo cada vez que un campo de ingreso de texto cambie\n  //name es el input\n  //value es el valor del input\n\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  }; //metodos para las imagenes\n\n\n  const cambioImagen = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  }; //metodo para actualizar imagenes\n\n\n  const actualizacionImagen = () => {\n    const storageRef = firebase.storage().ref(`images/${image.name}`).put(image);\n    alert(\"imagen subida con exito\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"card card-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registro de recetas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"introduzca el nombre de una receta\",\n        name: \"camponombre\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TableroDeIngredientes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: cambioImagen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"campodescripcion\",\n        cols: \"30\",\n        rows: \"10\",\n        className: \"form-control\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"complejidad\",\n        name: \"campocomplejidad\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block\",\n        onClick: handleSubmit,\n        children: \"registrar receta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 1\n  }, this);\n};\n\n_s(FormularioRecetas, \"0fNhWWi8/Ylt2zcIpnYJQtZGS00=\");\n\n_c = FormularioRecetas;\nexport default FormularioRecetas;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioRecetas\");","map":{"version":3,"sources":["C:/Users/DobleClick/Documents/GitHub/appIS/historiaRegistroRecetas/src/formularioRecetas.js"],"names":["React","useState","firebase","TableroDeIngredientes","FormularioRecetas","props","initialStateValues","camponombre","campodescripcion","campocomplejidad","image","setImage","values","setValues","agregarReceta","db","collection","doc","set","window","validarNombreReceta","str","pattern","RegExp","test","validarDescripcionReceta","validarComplejidadReceta","handleSubmit","e","alert","preventDefault","console","log","actualizacionImagen","handleInputChange","name","value","target","cambioImagen","files","storageRef","storage","ref","put"],"mappings":"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","sourcesContent":["import React,{useState}from'react'\r\nimport firebase from 'firebase'\r\nimport TableroDeIngredientes from './TableroDeIngredientes'\r\n\r\n const FormularioRecetas=(props)=>{\r\n    //valores iniciales de los campos nombre desripcion y complejidad\r\n    const initialStateValues = {\r\n        camponombre: '',\r\n        campodescripcion: '' , \r\n        campocomplejidad: '',};\r\n     \r\n    //valores iniciales de la imagen es null                     \r\n   const [image, setImage] = useState(null);\r\n    //valores iniciales de los campos de texto\r\n    const [values, setValues] = useState(initialStateValues);\r\n    \r\n    const agregarReceta= async ()=>{\r\n      //comunicacion con la base de datos\r\n      //con la coleccion receta.doc para id unico\r\n      //link object los valores\r\n     await  db.collection('receta').doc().set(values);\r\n     window(\"nuevo agregado\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //validacion de los campos de texto\r\n    const validarNombreReceta = (str) => {\r\n        var pattern = new RegExp(\"^.*[a-zA-Z]+.*$\");\r\n        return !!pattern.test(str);\r\n      };\r\n      const validarDescripcionReceta = (str) => {\r\n        var pattern = new RegExp(\"^.*[a-zA-Z]+.*$\");\r\n        return !!pattern.test(str);\r\n      };\r\n\r\n      const validarComplejidadReceta = (str) => {\r\n        var pattern = new RegExp(\"^[1-9][0-9]*$\");\r\n        return !!pattern.test(str);\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //controlo los cambios evitando que la pagina se recarge e informo de los valores de los campos de texto\r\n      const handleSubmit = e =>{\r\n      if(!validarNombreReceta(values.camponombre)){alert(\"nombre no valido\");}  \r\n      else{if(!validarDescripcionReceta(values.campodescripcion)){alert(\"descripcion no valida\");}  \r\n           else{if(!validarComplejidadReceta(values.campocomplejidad)){alert(\"la complejidad solo se mide con numeros\");}\r\n                  else{\r\n                      if(image===null){alert(\"debe agregar una imagen\");}\r\n                      else{ e.preventDefault();\r\n                             console.log(values)\r\n                             agregarReceta(values);                 \r\n                             actualizacionImagen();\r\n                            } \r\n                    }\r\n               }\r\n           }\r\n     };\r\n    //veo cada vez que un campo de ingreso de texto cambie\r\n    //name es el input\r\n    //value es el valor del input\r\n    const handleInputChange= (e) =>{\r\n     const{name,value}=e.target;\r\n      setValues({...values,[name]:value})\r\n      \r\n     };\r\n\r\n     //metodos para las imagenes\r\n     const cambioImagen = e => {if (e.target.files[0]) {setImage(e.target.files[0]);}};\r\n     //metodo para actualizar imagenes\r\n     const actualizacionImagen = () => {\r\n        const storageRef=firebase.storage().ref(`images/${image.name}`).put(image);\r\n        alert(\"imagen subida con exito\");                   \r\n        };\r\n    \r\n\r\n\r\n\r\nreturn(\r\n<form   className='card card-body'>\r\n    <h1>Registro de recetas</h1>\r\n    <div className=\"form-group input-group\">\r\n         <input type=\"text\" \r\n         className='form-control' \r\n         placeholder='introduzca el nombre de una receta'\r\n         name='camponombre'\r\n         onChange={handleInputChange}\r\n         />\r\n    </div>\r\n    <div>\r\n      <TableroDeIngredientes/>\r\n    </div>\r\n\r\n    <div className=\"form-group input-group\">\r\n         <br/>\r\n         <input type=\"file\" onChange={cambioImagen} />\r\n      \r\n         <br/>\r\n     </div>\r\n\r\n    <div className=\"form-group\">\r\n         <textarea name=\"campodescripcion\"  \r\n         cols=\"30\" \r\n         rows=\"10\" \r\n         className=\"form-control\"\r\n         onChange={handleInputChange}\r\n         >\r\n         </textarea>\r\n    </div>\r\n    <div className=\"form-group input-group\">\r\n         <input type=\"text\" \r\n         className='form-control' \r\n         placeholder='complejidad'\r\n         name='campocomplejidad'\r\n         onChange={handleInputChange}\r\n         />\r\n    </div>\r\n    <div>\r\n        <button className=\"btn btn-primary btn-block\" onClick={handleSubmit} \r\n        >registrar receta</button>\r\n    </div>\r\n</form>\r\n)\r\n\r\n};\r\nexport default FormularioRecetas;"]},"metadata":{},"sourceType":"module"}