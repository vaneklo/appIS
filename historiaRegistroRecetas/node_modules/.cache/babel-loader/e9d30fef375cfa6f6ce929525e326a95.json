{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DobleClick\\\\Documents\\\\GitHub\\\\appIS\\\\historiaRegistroRecetas\\\\src\\\\TableroDeIngredientes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { IngredientCreator } from './IngredientCreator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TableroDeIngredientes() {\n  _s();\n\n  const [recipeItems, setRecipeItems] = useState([{\n    cant: \"\",\n    name: \"\"\n  }]); //hago un recorrido de las tareas y las muestro en pantalla\n\n  const recipeTableRows = e => recipeItems.map(recipe => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: recipe.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: recipe.cant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteIngredient,\n        children: \"eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, recipe.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this));\n\n  const createNewIngredient = (cantidad, ingredientName) => {\n    //si la el ingrediente esta dentro de la lista ya no se agregara\n    if (!recipeItems.find(i => i.name === ingredientName)) {\n      setRecipeItems([...recipeItems, {\n        cant: cantidad,\n        name: ingredientName\n      }]);\n    } else {\n      alert('coincidencia encontrada el la lista de items');\n    }\n  }; //////////////////////////////////////\n\n\n  const deleteIngredient = (e, ingredientName) => {\n    e.preventDefault();\n    var contador = 0;\n    var arreglo = this.recipeItems.data;\n    arreglo.map(ingredientName => {\n      if (ingredientName.id == arreglo.id) {\n        arreglo.splice(contador, 1);\n      }\n\n      contador++;\n    });\n    this.setState({\n      data: arreglo\n    });\n  }; /////////////////////////////////////\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(IngredientCreator, {\n        agregarIngrediente: createNewIngredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"cantidad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"nombre del ingrediente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: recipeTableRows()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TableroDeIngredientes, \"mS8lhEB2lhPub8ioX/r2b5Q66LY=\");\n\n_c = TableroDeIngredientes;\nexport default TableroDeIngredientes;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableroDeIngredientes\");","map":{"version":3,"sources":["C:/Users/DobleClick/Documents/GitHub/appIS/historiaRegistroRecetas/src/TableroDeIngredientes.js"],"names":["React","useState","useEffect","IngredientCreator","TableroDeIngredientes","recipeItems","setRecipeItems","cant","name","recipeTableRows","e","map","recipe","deleteIngredient","createNewIngredient","cantidad","ingredientName","find","i","alert","preventDefault","contador","arreglo","data","id","splice","setState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,iBAAR,QAA+B,qBAA/B;;;AAEA,SAASC,qBAAT,GAAiC;AAAA;;AAE7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAC3C;AAACM,IAAAA,IAAI,EAAC,EAAN;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAD2C,CAAD,CAA9C,CAF6B,CAM7B;;AACC,QAAMC,eAAe,GAAEC,CAAD,IACtBL,WAAW,CAACM,GAAZ,CAAgBC,MAAM,iBACrB;AAAA,4BACA;AAAA,gBAAKA,MAAM,CAACJ;AAAZ;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gBAAKI,MAAM,CAACL;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,8BAAI;AAAQ,QAAA,OAAO,EAAEM,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,KAASD,MAAM,CAACJ,IAAhB;AAAA;AAAA;AAAA;AAAA,UADD,CADA;;AAUA,QAAMM,mBAAmB,GAAG,CAACC,QAAD,EAAUC,cAAV,KAA6B;AACvD;AAED,QAAI,CAACX,WAAW,CAACY,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACV,IAAF,KAAWQ,cAAjC,CAAL,EAAuD;AACrDV,MAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiB;AAAEE,QAAAA,IAAI,EAACQ,QAAP;AAAgBP,QAAAA,IAAI,EAAEQ;AAAtB,OAAjB,CAAD,CAAd;AACD,KAFD,MAGI;AAACG,MAAAA,KAAK,CAAC,8CAAD,CAAL;AAAsD;AAC5D,GAPA,CAjB4B,CA0BjC;;;AACA,QAAMN,gBAAgB,GAAG,CAACH,CAAD,EAAGM,cAAH,KAAsB;AAC3CN,IAAAA,CAAC,CAACU,cAAF;AACE,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,OAAO,GAAG,KAAKjB,WAAL,CAAiBkB,IAA/B;AACFD,IAAAA,OAAO,CAACX,GAAR,CAAaK,cAAD,IAAoB;AAC9B,UAAIA,cAAc,CAACQ,EAAf,IAAqBF,OAAO,CAACE,EAAjC,EAAqC;AACpCF,QAAAA,OAAO,CAACG,MAAR,CAAeJ,QAAf,EAAyB,CAAzB;AACD;;AACAA,MAAAA,QAAQ;AACT,KALD;AAMA,SAAKK,QAAL,CAAc;AAAEH,MAAAA,IAAI,EAAED;AAAR,KAAd;AACH,GAXD,CA3BiC,CAuCjC;;;AAEI,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI,QAAC,iBAAD;AAAmB,QAAA,kBAAkB,EAAER;AAAvC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEE;AAAO,QAAA,SAAS,EAAC,oCAAjB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,oBAAQL,eAAe;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA5DML,qB;;KAAAA,qB;AA8DP,eAAeA,qBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {IngredientCreator} from'./IngredientCreator'\r\n\r\nfunction TableroDeIngredientes() {\r\n\r\n    const [recipeItems, setRecipeItems] = useState([\r\n        {cant:\"\"  ,name: \"\"}\r\n      ]);\r\n    \r\n    //hago un recorrido de las tareas y las muestro en pantalla\r\n     const recipeTableRows=(e)=>\r\n     recipeItems.map(recipe=>(\r\n      <tr key={recipe.name}>\r\n      <td>{recipe.name}</td>\r\n      <td>{recipe.cant}</td>\r\n      <td><button onClick={deleteIngredient }>eliminar</button> </td>\r\n      </tr>\r\n      \r\n      ))\r\n    \r\n     const createNewIngredient = (cantidad,ingredientName) => {\r\n       //si la el ingrediente esta dentro de la lista ya no se agregara\r\n       \r\n      if (!recipeItems.find(i => i.name === ingredientName)) {\r\n        setRecipeItems([...recipeItems, { cant:cantidad,name: ingredientName}]);\r\n      }\r\n      else{alert('coincidencia encontrada el la lista de items')}\r\n    };\r\n\r\n//////////////////////////////////////\r\nconst deleteIngredient = (e,ingredientName) => {\r\n    e.preventDefault();\r\n      var contador = 0;\r\n      var arreglo = this.recipeItems.data;\r\n    arreglo.map((ingredientName) => {\r\n      if (ingredientName.id == arreglo.id) {\r\n       arreglo.splice(contador, 1);\r\n     }\r\n      contador++;\r\n    });\r\n    this.setState({ data: arreglo});\r\n};\r\n/////////////////////////////////////\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid\">   \r\n            <IngredientCreator agregarIngrediente={createNewIngredient}/>\r\n          <table className=\"table table-striped table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>cantidad</th>\r\n                <th>nombre del ingrediente</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{recipeTableRows()}</tbody>\r\n          </table>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default TableroDeIngredientes;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}